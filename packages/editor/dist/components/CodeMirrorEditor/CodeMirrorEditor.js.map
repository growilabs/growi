{"version":3,"file":"CodeMirrorEditor.js","sources":["../../../src/components/CodeMirrorEditor/CodeMirrorEditor.tsx"],"sourcesContent":["import {\n  forwardRef, useMemo, useRef,\n} from 'react';\n\nimport type { ReactCodeMirrorProps } from '@uiw/react-codemirror';\n\nimport { GlobalCodeMirrorEditorKey } from '../../consts';\nimport { useCodeMirrorEditorIsolated } from '../../stores';\n\nimport { Toolbar } from './Toolbar';\n\nimport style from './CodeMirrorEditor.module.scss';\n\nconst CodeMirrorEditorContainer = forwardRef<HTMLDivElement>((props, ref) => {\n  return (\n    <div {...props} className={`flex-expand-vert ${style['codemirror-editor-container']}`} ref={ref} />\n  );\n});\n\n\ntype Props = {\n  editorKey: string | GlobalCodeMirrorEditorKey,\n  onChange?: (value: string) => void,\n}\n\nexport const CodeMirrorEditor = (props: Props): JSX.Element => {\n  const {\n    editorKey,\n    onChange,\n  } = props;\n\n  const containerRef = useRef(null);\n\n  const cmProps = useMemo<ReactCodeMirrorProps>(() => {\n    return {\n      onChange,\n    };\n  }, [onChange]);\n  useCodeMirrorEditorIsolated(editorKey, containerRef.current, cmProps);\n\n  return (\n    <div className=\"flex-expand-vert\">\n      <CodeMirrorEditorContainer ref={containerRef} />\n      <Toolbar />\n    </div>\n  );\n};\n"],"names":["CodeMirrorEditorContainer","forwardRef","props","ref","jsx","style","CodeMirrorEditor","editorKey","onChange","containerRef","useRef","cmProps","useMemo","useCodeMirrorEditorIsolated","jsxs","Toolbar"],"mappings":";;;;;AAaA,MAAMA,IAA4BC,EAA2B,CAACC,GAAOC,MAEjE,gBAAAC,EAAC,OAAK,EAAA,GAAGF,GAAO,WAAW,oBAAoBG,EAAM,6BAA6B,CAAC,IAAI,KAAAF,EAAU,CAAA,CAEpG,GAQYG,IAAmB,CAACJ,MAA8B;AACvD,QAAA;AAAA,IACJ,WAAAK;AAAA,IACA,UAAAC;AAAA,EACE,IAAAN,GAEEO,IAAeC,EAAO,IAAI,GAE1BC,IAAUC,EAA8B,OACrC;AAAA,IACL,UAAAJ;AAAA,EAAA,IAED,CAACA,CAAQ,CAAC;AACe,SAAAK,EAAAN,GAAWE,EAAa,SAASE,CAAO,GAGlE,gBAAAG,EAAC,OAAI,EAAA,WAAU,oBACb,UAAA;AAAA,IAAC,gBAAAV,EAAAJ,GAAA,EAA0B,KAAKS,EAAc,CAAA;AAAA,sBAC7CM,GAAQ,EAAA;AAAA,EACX,EAAA,CAAA;AAEJ;"}