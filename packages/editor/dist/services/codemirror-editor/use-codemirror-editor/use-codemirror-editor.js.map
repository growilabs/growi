{"version":3,"file":"use-codemirror-editor.js","sources":["../../../../src/services/codemirror-editor/use-codemirror-editor/use-codemirror-editor.ts"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { languages } from '@codemirror/language-data';\nimport { EditorState, type Extension } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { useCodeMirror, type UseCodeMirror } from '@uiw/react-codemirror';\nimport deepmerge from 'ts-deepmerge';\n\nimport { useAppendExtensions, type AppendExtensions } from './utils/append-extensions';\nimport { useFocus, type Focus } from './utils/focus';\nimport { useGetDoc, type GetDoc } from './utils/get-doc';\nimport { useInitDoc, type InitDoc } from './utils/init-doc';\nimport { useSetCaretLine, type SetCaretLine } from './utils/set-caret-line';\n\ntype UseCodeMirrorEditorUtils = {\n  initDoc: InitDoc,\n  appendExtensions: AppendExtensions,\n  getDoc: GetDoc,\n  focus: Focus,\n  setCaretLine: SetCaretLine,\n}\nexport type UseCodeMirrorEditor = {\n  state: EditorState | undefined;\n  view: EditorView | undefined;\n} & UseCodeMirrorEditorUtils;\n\n\nconst defaultExtensions: Extension[] = [\n  markdown({ base: markdownLanguage, codeLanguages: languages }),\n];\n\nexport const useCodeMirrorEditor = (props?: UseCodeMirror): UseCodeMirrorEditor => {\n\n  const mergedProps = useMemo<UseCodeMirror>(() => {\n    return deepmerge(\n      props ?? {},\n      { extensions: defaultExtensions },\n    );\n  }, [props]);\n\n  const { state, view } = useCodeMirror(mergedProps);\n\n  const initDoc = useInitDoc(view);\n  const appendExtensions = useAppendExtensions(view);\n  const getDoc = useGetDoc(view);\n  const focus = useFocus(view);\n  const setCaretLine = useSetCaretLine(view);\n\n  return {\n    state,\n    view,\n    initDoc,\n    appendExtensions,\n    getDoc,\n    focus,\n    setCaretLine,\n  };\n};\n"],"names":["defaultExtensions","markdown","markdownLanguage","languages","useCodeMirrorEditor","props","mergedProps","useMemo","deepmerge","state","view","useCodeMirror","initDoc","useInitDoc","appendExtensions","useAppendExtensions","getDoc","useGetDoc","focus","useFocus","setCaretLine","useSetCaretLine"],"mappings":";;;;;;;;;;AA4BA,MAAMA,IAAiC;AAAA,EACrCC,EAAS,EAAE,MAAMC,GAAkB,eAAeC,GAAW;AAC/D,GAEaC,IAAsB,CAACC,MAA+C;AAE3E,QAAAC,IAAcC,EAAuB,MAClCC;AAAA,IACLH,KAAS,CAAC;AAAA,IACV,EAAE,YAAYL,EAAkB;AAAA,EAAA,GAEjC,CAACK,CAAK,CAAC,GAEJ,EAAE,OAAAI,GAAO,MAAAC,EAAK,IAAIC,EAAcL,CAAW,GAE3CM,IAAUC,EAAWH,CAAI,GACzBI,IAAmBC,EAAoBL,CAAI,GAC3CM,IAASC,EAAUP,CAAI,GACvBQ,IAAQC,EAAST,CAAI,GACrBU,IAAeC,EAAgBX,CAAI;AAElC,SAAA;AAAA,IACL,OAAAD;AAAA,IACA,MAAAC;AAAA,IACA,SAAAE;AAAA,IACA,kBAAAE;AAAA,IACA,QAAAE;AAAA,IACA,OAAAE;AAAA,IACA,cAAAE;AAAA,EAAA;AAEJ;"}