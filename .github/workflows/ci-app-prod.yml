name: Node CI for app production

on:
  push:
    branches:
      - master
      - dev/6.*.x
    paths:
      - .github/workflows/ci-app-prod.yml
      - .github/workflows/reusable-app-prod.yml
      - .github/workflows/reusable-app-reg-suit.yml
      - tsconfig.base.json
      - turbo.json
      - yarn.lock
      - package.json
      - apps/app/**
      - '!apps/app/docker/**'
      - packages/**
  pull_request:
    branches:
      - master
      - dev/6.*.x
    types: [opened, reopened, synchronize]
    paths:
      - .github/workflows/ci-app-prod.yml
      - .github/workflows/reusable-app-prod.yml
      - .github/workflows/reusable-app-reg-suit.yml
      - tsconfig.base.json
      - yarn.lock
      - turbo.json
      - package.json
      - apps/app/**
      - '!apps/app/docker/**'
      - packages/**
  workflow_call:
    inputs:
      cypress-config-video:
        description: 'Enable video when running Cypress test'
        type: boolean
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:

  test-prod-node16:
    uses: weseek/growi/.github/workflows/reusable-app-prod.yml@master
    with:
      node-version: 16.x
      skip-cypress: true
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


  test-prod-node18:
    uses: weseek/growi/.github/workflows/reusable-app-prod.yml@master
    with:
      node-version: 18.x
      skip-cypress: ${{ contains( github.event.pull_request.labels.*.name, 'dependencies' ) }}
      cypress-report-artifact-name: Cypress report
      cypress-config-video: ${{ inputs.cypress-config-video || false }}
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}


  run-reg-suit-node18:
    needs: [test-prod-node18]

    uses: weseek/growi/.github/workflows/reusable-app-reg-suit.yml@master

    if: always()

    with:
      node-version: 18.x
      skip-reg-suit: ${{ contains( github.event.pull_request.labels.*.name, 'dependencies' ) }}
      cypress-report-artifact-name: Cypress report
    secrets:
      REG_NOTIFY_GITHUB_PLUGIN_CLIENTID: ${{ secrets.REG_NOTIFY_GITHUB_PLUGIN_CLIENTID }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
