@use '../bootstrap/init' as *;
@use '../atoms/mixins/buttons' as mixins-buttons;
@use './mixins/hsl-button';
@use './mixins/hsl-badge';
@use './hsl-functions' as hsl;

$hsl-colors: (
  'primary': var(--primary),
  'secondary': var(--secondary)
);

@each $color, $value in $hsl-colors {
  .bg-#{$color} {
    background-color: $value !important;
  }
}

@each $color, $value in $hsl-colors {
  .border-#{$color} {
    border-color: $value !important;
  }
}

// TODO: hover-focus() dropped in bootstrap v5
// https://redmine.weseek.co.jp/issues/128307
// @each $color, $value in $hsl-colors {
//   .text-#{$color} {
//     color: $value !important;
//     @if $emphasized-link-hover-darken-percentage != 0 {
//       a {
//         @include hover-focus() {
//           color: hsl.darken($value, $emphasized-link-hover-darken-percentage) !important;
//         }
//       }
//     }
//   }
// }

@each $color, $value in $hsl-colors {
  .btn-#{$color} {
    @include hsl-button.button-variant($value, $value);
    @include hsl-button.button-svg-icon-variant($value, $value);
    box-shadow: none !important;
  }
}

@each $color, $value in $hsl-colors {
  .btn-outline-#{$color} {
    @include hsl-button.button-outline-variant($value, $value, hsl.alpha($value, 10%), $value);
    @include mixins-buttons.button-outline-svg-icon-variant($value, $value);

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
      color: $value;
      background-color: hsl.alpha($value, 10%);
      border-color: $value;
    }

    box-shadow: none !important;
  }

  // separate style: https://github.com/weseek/growi/pull/6804
  .show > .btn-outline-#{$color}.dropdown-toggle {
    color: $value;
    background-color: hsl.alpha($value, 10%);
    border-color: $value;
  }
}

@each $color, $value in $hsl-colors {
  .alert-#{$color} {
    $alert-color: rgba(white,90%);
    $alert-bg-color: hsl.darken($value, calc($alert-bg-level + 0.95) * $theme-color-interval);
    $alert-border-color: hsl.darken($value, $alert-border-level * $theme-color-interval);

    color: $alert-color;
    @include gradient-bg($alert-bg-color);
    border-color: $alert-border-color;

    hr {
      border-top-color: hsl.darken($value, calc($alert-border-level + 5) * $theme-color-interval);
    }

    .alert-link {
      color: hsl.contrast($value);
    }
  }

  // Alert link
  :root, .wiki {
    .alert.alert-primary {
      a,
      a:hover {
        color: hsl.darken($value, calc($alert-bg-level - 7.7) * $theme-color-interval);
      }
    }
  }
}

@each $color, $value in $hsl-colors {
  .bg-#{$color} {
    @include hsl-badge.badge-variant($value);
  }

  a.bg-#{$color}  {
    @include hsl-badge.badge-variant($value);
  }
}
